input {
  stdin { }
  #file { 
  #  path => "/opt/logstash/conf.d/input-exemple.log" 
  #  type => "syslog.elasticsearch"
  #  start_position => "beginning"
  #}
}

output {
  stdout { codec => rubydebug }
}


filter {
  #if [type] == "syslog" {



  #################################################
  ### Container logs via docker log-driver
  #################################################

  # Old docker format: <131>2016-05-12T13:29:04+02:00 tdengine docker/trader[846]: [2016-05-12 11:29:04,189: INFO/MainProcess] Task liquidities.tasks.execute_liquidity_funding_operations[a321$
  if [message] =~ "^<\d+>\d+-\d+-\d+T\d+:\d+:\d+\+\d+:\d+ \D+ \D+\[\d+\]: .*$" {
    grok {
      match => { "message" => "%{SYSLOG5424PRI}+(?:%{TIMESTAMP_ISO8601:syslog_time}|-) +(?:%{HOSTNAME:vm}|-) +(\w+/%{NOTSPACE:container}\[\d+\]): +%{GREEDYDATA:msg}" }
    }
  }

  # New docker >1.10 format no RFC: <27>2016-05-12T13:19:23Z backendpublic docker/backendpublic[844]:         "error-text": "Illegal Sender Address - rejected",
  # or old staff                    <14>2016-05-23T00:09:08Z 6a6bad0fcc5c cocky_albattani[1]: /var/lib/postgresql/9.3/main/pg_clog/0024
  if [message] =~ "^<\d+>\d+-\d+-\d+T\d+:\d+:\d+Z \w+ (docker\/|)\w+\[\d+\]: .*$" {
    grok {
      match => { "message" => "%{SYSLOG5424PRI}+(?:%{TIMESTAMP_ISO8601:syslog_time}|-) +(?:%{HOSTNAME:vm}|-) +((\w+/|)%{NOTSPACE:container}\[\d+\]): +%{GREEDYDATA:msg}" }
    }
  }

  # New docker format 1.10 RFC 3164: <30> Apr 27 12:41:10 elk-staging docker/kibana[850]: {"name":"Kibana","hostnam....
  # Or other old format:             <30>May 18 14:02:58 docker/backendadmin[813]: 185.19.28.64 - - [18/May/2016:14:02:58 +0000] "GET /static/grappelli_nested/css/grp_nested_inline.css HTTP/1$
  #if [message] =~ "^<\d+>(\s|)\w+ \d+ \d+:\d+:\d+(\s\S+|)\s\w+\/\S+\[\d+\]: .*$" {
  if [message] =~ "^<\d+>\s*\w+\s+\d+\s\d+:\d+:\d+(\s\S+|)\s\w+\/\S+\[\d+\]:\s*.*$" {
    grok {
      # match => { "message" => "%{SYSLOG5424PRI} +(?:%{CISCOTIMESTAMP:syslog_time}|-) +(?:%{HOSTNAME:vm}|-) +(\w+/%{NOTSPACE:container}\[\d+\]): +%{GREEDYDATA:msg}" }
      match => { "message" => "%{SYSLOG5424PRI}+(\s|)+(?:%{CISCOTIMESTAMP:syslog_time}|-)+(?: %{HOSTNAME:vm}|)+( \w+/%{NOTSPACE:container}\[\d+\]): +%{GREEDYDATA:msg}" }
    }
    #date {
      #match => [ "syslog_time", "yyyy-MM-dd'T'HH:mm:ss.SSSSSZ+0200", "YYYY-MM-dd'T'HH:mm:ssZ" ]
      #target => "@timestamp"
      #locale => "en"
      #timezone => "UTC"
  }


# docker run -it --rm --name logstash -p 5001:5000 -p 5001:5000/udp -v $PWD/logstash-conf:/opt/logstash/conf.d logstash:1.5.3  -f /opt/logstash/conf.d/logstash-test.conf

### Copy/paste ######################################
    



}
